#!/bin/bash
set -e

PLATFORM=$([ ! -z "$PLATFORM" ] || echo "linux-amd64" )
CLASH_HOME=$([ ! -z "$CLASH_HOME" ] || echo "$pwd")

require() {
    local requirement="$1"
    if [ -z "$(command -v $requirement)" ]; then
        echo "This script require '$requirement' command to run. Please install it. "
        exit 1
    fi
}

require jq
require date
require curl
require gzip

_tempfile="/tmp/tmp-$(date +%s%N)"
_workdir="$(pwd)"
_datadir="$_workdir/data"

setup_start() {
    __OLD_IFS=$IFS
    IFS=$'\n'
    [ -d "$_tempfile" ] || mkdir -p "$_tempfile"
    [ -d "$_datadir" ] || mkdir -p "$_datadir"
    [ -d "$_workdir/bin" ] || mkdir -p "$_workdir/bin"
}

cleanup_exit() {
    echo "Cleaning up..."
    IFS=$__OLD_IFS
    [ -d "$_tempfile" ] && rm -rf "$_tempfile" -v
    exit 0
}

trap "cleanup_exit" SIGINT SIGTERM EXIT

setup_start

VERSION_LIST="$_tempfile/versions"

echo "Downloading file list"
curl -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/Dreamacro/clash/releases" \
| jq '.[0] | { name: .name , assets : .assets | map({ name: .name, content_type: .content_type, browser_download_url: .browser_download_url }) }' \
> "$VERSION_LIST"

CURRENT_VERSION=""
if [ -f "$_datadir/current_version" ]; then
    CURRENT_VERSION=$(cat "$_datadir/current_version")
fi

LATEST_VERSION=$(cat "$VERSION_LIST" | jq '.name')

if [ "$CURRENT_VERSION" == "$LATEST_VERSION" ]; then
    echo "Version is same: $CURRENT_VERSION, $LATEST_VERSION"
    exit 0
fi

FILTERED_VERSION_LIST="$_tempfile/filtered_version"
cat "$VERSION_LIST" | jq '.assets | map(select(.name | contains("linux-amd64")))' > "$FILTERED_VERSION_LIST"

SELECTED_VERSION=""
FILTERED_VERSION_LIST_LENGTH=$(cat $FILTERED_VERSION_LIST | jq 'length')
if [ "$FILTERED_VERSION_LIST_LENGTH" -gt '1' ]
then
    __selection=""
    __number='^[0-9]+$'
    while : ; do
        echo "There are two versions of '$PLATFORM':"
        cat "$FILTERED_VERSION_LIST" | jq -r '. | to_entries | map({ index: .key, name : .value.name }) | .[] | ((.index + 1) | tostring) + ": " + .name '
        read -p "Select one:" __selection
        if [[ "$__selection" =~ $__number ]] && ([ "$__selection" -le "$FILTERED_VERSION_LIST_LENGTH" ] && [ "$__selection" -gt "0" ]); then
            break
        fi
        echo "[!] Input must be a number between 1-$FILTERED_VERSION_LIST_LENGTH."
        echo
    done
    SELECTED_VERSION=$(cat "$FILTERED_VERSION_LIST" | jq -r " .[$(($__selection - 1))] | .browser_download_url ")
elif [ "$FILTERED_VERSION_LIST_LENGTH" -eq '1' ]
    SELECTED_VERSION=$(cat "$FILTERED_VERSION_LIST" | jq -r " .[0] | .browser_download_url ")
else
    echo "Unsupported platform '$PLATFORM'."
    exit 1
fi
echo "Selected '$SELECTED_VERSION', start download."
curl -L "$SELECTED_VERSION" -o "$_tempfile/clash.gz"
echo "Installing..."
gzip -vcd "$_tempfile/clash.gz" > "$_workdir/bin/clash"
chmod +x "$_workdir/bin/clash"
echo "$LATEST_VERSION" > "$_datadir/current_version"
echo "Finished."
exit 0